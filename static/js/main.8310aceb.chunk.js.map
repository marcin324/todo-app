{"version":3,"sources":["reducers/taskReducer.js","actions/actions.js","reducers/formReducer.js","reducers/reducer.js","components/atoms/ButtonIcon.js","context/index.js","hoc/withContext.js","components/molecules/Sidebar.js","components/atoms/Heading.js","components/atoms/Paragraph.js","components/atoms/Input.js","components/atoms/Button.js","components/molecules/NewItemForm.js","templates/PageTemplate.js","components/molecules/TaskCard.js","view/Todo.js","view/Done.js","theme/GlobalStyle.js","theme/mainTheme.js","templates/MainTemplate.js","view/App.js","store/configureStore.js","index.js"],"names":["initialState","todo","id","title","deadline","important","finishDate","done","taskReducer","state","action","type","itemType","filter","item","doneTask","shift","Date","toISOString","slice","text","date","checked","formReducer","reducer","history","combineReducers","router","connectRouter","ButtonIcon","styled","button","PageContext","React","createContext","withContext","Component","props","Consumer","context","cardContext","StyledWrapper","div","activeColor","theme","StyledButtonIcon","fontSize","xl","Sidebar","as","NavLink","to","activeclass","icon","faListUl","faTasks","defaultProps","Heading","h1","big","l","bold","Paragraph","p","s","light","Input","input","regular","grey200","grey300","Button","secondary","css","tertiary","form","isVisible","InnerWrapper","FormWrapper","StyledLabel","label","StyledInput","connect","dispatch","updateTextForm","updateTextFormAction","updateCheckedForm","updateCheckedFormAction","updateDateForm","updateDateFormAction","addTask","uuid","v4","addTaskAction","minDate","onSubmit","e","preventDefault","placeholder","value","onChange","target","htmlFor","min","StyledGrid","StyledPageHeader","StyledHeading","StyledParagraph","m","PageTemplate","isNewItemFormVisible","handleNewItemFormToggle","setState","prevState","this","children","length","onClick","faPlus","colored","flex","ButtonWrapper","isImportant","StyledDateInfo","TaskCard","removeTask","changeTaskStatus","faExclamationTriangle","color","removeTaskAction","changeTaskStatusAction","sort","a","b","cardType","map","key","GlobalStyle","createGlobalStyle","grey100","black","xxs","xs","MainTemplate","pageType","setCurrentPage","pageTypes","pathname","location","page","includes","currentPage","prevProps","Provider","withRouter","createBrowserHistory","basename","process","App","store","composeEnhancer","composeWithDevTools","createStore","applyMiddleware","routerMiddleware","configureStore","exact","path","render","component","Todo","Done","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8310aceb.chunk.js","sourcesContent":["import { REMOVE_TASK, ADD_TASK, CHANGE_TASK_STATUS } from \"../actions/actions\";\r\n\r\nexport const initialState = {\r\n  todo: [\r\n    {\r\n      id: 0,\r\n      title: `Zdobyć pierwszą pracę jako frontend developer`,\r\n      deadline: `2020-01-01`,\r\n      important: true,\r\n      finishDate: null\r\n    }\r\n  ],\r\n  done: []\r\n};\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case REMOVE_TASK:\r\n      return {\r\n        ...state,\r\n        [action.itemType]: [\r\n          ...state[action.itemType].filter(item => item.id !== action.id)\r\n        ]\r\n      };\r\n    case ADD_TASK:\r\n      return {\r\n        ...state,\r\n        todo: [\r\n          ...state.todo,\r\n          {\r\n            id: action.id,\r\n            title: action.title,\r\n            deadline: action.deadline,\r\n            important: action.important,\r\n            finishDate: null\r\n          }\r\n        ]\r\n      };\r\n    case CHANGE_TASK_STATUS:\r\n      let doneTask = {\r\n        todo: [...state.todo.filter(item => item.id === action.id)]\r\n      };\r\n      doneTask = doneTask.todo.shift();\r\n      return {\r\n        ...state,\r\n        [action.itemType]: [\r\n          ...state[action.itemType].filter(item => item.id !== action.id)\r\n        ],\r\n        done: [\r\n          ...state.done,\r\n          { ...doneTask, finishDate: new Date().toISOString().slice(0, 10) }\r\n        ]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n","import uuid from \"uuid\";\r\n\r\nexport const ADD_TASK = \"ADD_TASK\";\r\nexport const CHANGE_TASK_STATUS = \"CHANGE_TASK_STATUS\";\r\nexport const REMOVE_TASK = \"REMOVE_TASK\";\r\nexport const UPDATE_TEXT_FORM = \"UPDATE_TEXT_FORM\";\r\nexport const UPDATE_DATE_FORM = \"UPDATE_DATE_FORM\";\r\nexport const UPDATE_CHECKBOX_FORM = \"UPDATE_CHECKBOX_FORM\";\r\n\r\nexport const addTask = (title, deadline, important) => ({\r\n  type: ADD_TASK,\r\n  id: uuid.v4(),\r\n  title,\r\n  deadline,\r\n  important\r\n});\r\n\r\nexport const changeTaskStatus = (itemType, id) => ({\r\n  type: CHANGE_TASK_STATUS,\r\n  itemType,\r\n  id\r\n});\r\n\r\nexport const removeTask = (itemType, id) => ({\r\n  type: REMOVE_TASK,\r\n  itemType,\r\n  id\r\n});\r\n\r\nexport const updateTextForm = text => ({\r\n  type: UPDATE_TEXT_FORM,\r\n  text\r\n});\r\n\r\nexport const updateCheckboxForm = checked => ({\r\n  type: UPDATE_CHECKBOX_FORM,\r\n  checked\r\n});\r\n\r\nexport const updateDateForm = date => ({\r\n  type: UPDATE_DATE_FORM,\r\n  date\r\n});\r\n","import {\r\n  UPDATE_TEXT_FORM,\r\n  UPDATE_CHECKBOX_FORM,\r\n  UPDATE_DATE_FORM\r\n} from \"../actions/actions\";\r\n\r\nlet minDate = new Date().toISOString().slice(0, 10);\r\n\r\nconst initialState = {\r\n  text: \"\",\r\n  date: minDate,\r\n  checked: false\r\n};\r\n\r\nconst formReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_TEXT_FORM:\r\n      return {\r\n        ...state,\r\n        text: action.text\r\n      };\r\n    case UPDATE_DATE_FORM:\r\n      return {\r\n        ...state,\r\n        date: action.date\r\n      };\r\n    case UPDATE_CHECKBOX_FORM:\r\n      return {\r\n        ...state,\r\n        checked: action.checked\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default formReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { connectRouter } from \"connected-react-router\";\r\nimport taskReducer from \"./taskReducer\";\r\nimport formReducer from \"./formReducer\";\r\n\r\nexport const reducer = history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    taskReducer,\r\n    formReducer\r\n  });\r\n\r\nexport default reducer;\r\n","import styled from \"styled-components\";\r\n\r\nconst ButtonIcon = styled.button`\r\n  display: block;\r\n  width: 67px;\r\n  height: 67px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &.active {\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import React from \"react\";\r\n\r\nconst PageContext = React.createContext(\"todo\");\r\n\r\nexport default PageContext;\r\n","import React from \"react\";\r\nimport PageContext from \"../context/index\";\r\n\r\nconst withContext = Component => {\r\n  return function contextComponent(props) {\r\n    return (\r\n      <PageContext.Consumer>\r\n        {context => <Component {...props} cardContext={context} />}\r\n      </PageContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withContext;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faListUl, faTasks } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ButtonIcon from \"../atoms/ButtonIcon\";\r\nimport withContext from \"../../hoc/withContext\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  padding: 80px 10px;\r\n  width: 150px;\r\n  height: 100vh;\r\n  background-color: ${({ activeColor, theme }) =>\r\n    activeColor ? theme[activeColor] : theme.todo};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledButtonIcon = styled(ButtonIcon)`\r\n  margin-bottom: 50px;\r\n  padding: 15px 20px;\r\n  border-radius: 5px;\r\n  color: black;\r\n  text-decoration: none;\r\n  font-size: ${({ theme }) => theme.fontSize.xl};\r\n`;\r\n\r\nconst Sidebar = ({ cardContext }) => {\r\n  return (\r\n    <StyledWrapper activeColor={cardContext}>\r\n      <StyledButtonIcon as={NavLink} to=\"/todo\" activeclass=\"active\">\r\n        <FontAwesomeIcon icon={faListUl} />\r\n      </StyledButtonIcon>\r\n      <StyledButtonIcon as={NavLink} to=\"/done\" activeclass=\"active\">\r\n        <FontAwesomeIcon icon={faTasks} />\r\n      </StyledButtonIcon>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  cardContext: PropTypes.oneOf([\"todo\", \"done\"])\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  cardContext: \"todo\"\r\n};\r\n\r\nexport default withContext(Sidebar);\r\n","import styled from \"styled-components\";\r\n\r\nconst Heading = styled.h1`\r\n  font-size: ${({ theme, big }) =>\r\n    big ? theme.fontSize.xl : theme.fontSize.l};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n\r\n  &.active {\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nexport default Heading;\r\n","import styled from \"styled-components\";\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.light};\r\n`;\r\n\r\nexport default Paragraph;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  padding: 15px 30px;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  background-color: ${({ theme }) => theme.grey200};\r\n  border: none;\r\n  border-radius: 50px;\r\n\r\n  ::placeholder {\r\n    letter-spacing: 1px;\r\n    color: ${({ theme }) => theme.grey300};\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  margin: 25px 0 0 0;\r\n  padding: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: ${({ activeColor, theme }) =>\r\n    activeColor ? theme[activeColor] : theme.todo};\r\n  width: 220px;\r\n  height: 47px;\r\n  border: none;\r\n  border-radius: 50px;\r\n  font-family: \"Montserrat\";\r\n  font-weight: 600;\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  color: black;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  ${({ secondary }) =>\r\n    secondary &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.grey200};\r\n      width: 105px;\r\n      height: 30px;\r\n      font-size: 10px;\r\n    `}\r\n\r\n  ${({ tertiary }) =>\r\n    tertiary &&\r\n    css`\r\n      background-color: ${({ theme }) => theme.todo};\r\n      width: 105px;\r\n      height: 30px;\r\n      font-size: 10px;\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  updateTextForm as updateTextFormAction,\r\n  updateCheckboxForm as updateCheckedFormAction,\r\n  updateDateForm as updateDateFormAction,\r\n  addTask as addTaskAction\r\n} from \"../../actions/actions\";\r\nimport Input from \"../atoms/Input\";\r\nimport Button from \"../atoms/Button\";\r\nimport Heading from \"../atoms/Heading\";\r\n\r\nconst StyledWrapper = styled.form`\r\n  z-index: 9999;\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 40px 80px 100px;\r\n  right: 0;\r\n  top: 0;\r\n  height: 100vh;\r\n  width: 650px;\r\n  background-color: white;\r\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.2);\r\n  transform: translateX(${({ isVisible }) => (isVisible ? \"0\" : \"105%\")});\r\n  transition: all 0.4s ease-in-out;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  flex-basis: 40%;\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  padding: 15px 10px;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  margin: auto 0;\r\n`;\r\n\r\nconst NewItemForm = ({\r\n  isVisible,\r\n  updateTextForm,\r\n  updateCheckedForm,\r\n  updateDateForm,\r\n  addTask,\r\n  title,\r\n  deadline,\r\n  important\r\n}) => {\r\n  let minDate = new Date().toISOString().slice(0, 10);\r\n  return (\r\n    <StyledWrapper\r\n      isVisible={isVisible}\r\n      onSubmit={e => {\r\n        e.preventDefault();\r\n        addTask(title, deadline, important);\r\n        updateTextForm(\"\");\r\n        updateDateForm(minDate);\r\n        updateCheckedForm(false);\r\n      }}\r\n    >\r\n      <Heading big>Dodaj nowe zadanie</Heading>\r\n      <InnerWrapper>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"Wpisz zadanie\"\r\n          value={title}\r\n          onChange={e => updateTextForm(e.target.value)}\r\n        />\r\n        <FormWrapper>\r\n          <StyledLabel htmlFor=\"date\">Termin wykonania:</StyledLabel>\r\n          <Input\r\n            type=\"date\"\r\n            value={deadline}\r\n            min={minDate}\r\n            onChange={e => updateDateForm(e.target.value)}\r\n          />\r\n        </FormWrapper>\r\n        <FormWrapper>\r\n          <StyledInput\r\n            type=\"checkbox\"\r\n            checked={important}\r\n            id=\"important\"\r\n            onChange={e => updateCheckedForm(e.target.checked)}\r\n          />\r\n          <StyledLabel htmlFor=\"important\">Priorytet</StyledLabel>\r\n        </FormWrapper>\r\n      </InnerWrapper>\r\n      <Button>Dodaj</Button>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateTextForm: text => dispatch(updateTextFormAction(text)),\r\n  updateCheckedForm: checked => dispatch(updateCheckedFormAction(checked)),\r\n  updateDateForm: date => dispatch(updateDateFormAction(date)),\r\n  addTask: (title, deadline, important) =>\r\n    dispatch(addTaskAction(title, deadline, important))\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  title: state.formReducer.text,\r\n  important: state.formReducer.checked,\r\n  deadline: state.formReducer.date\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NewItemForm);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Sidebar from \"../components/molecules/Sidebar\";\r\nimport Heading from \"../components/atoms/Heading\";\r\nimport Paragraph from \"../components/atoms/Paragraph\";\r\nimport ButtonIcon from \"../components/atoms/ButtonIcon\";\r\nimport NewItemForm from \"../components/molecules/NewItemForm\";\r\nimport withContext from \"../hoc/withContext\";\r\n\r\nconst StyledGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 100px;\r\n  padding: 50px 100px;\r\n`;\r\n\r\nconst StyledPageHeader = styled.div`\r\n  padding: 50px 100px 0;\r\n  margin: 0 0 20px 0;\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 0 0 10px;\r\n\r\n  ::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  margin: 0;\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n\r\n  ::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst StyledButtonIcon = styled(ButtonIcon)`\r\n  position: fixed;\r\n  bottom: 40px;\r\n  right: 20px;\r\n  width: 55px;\r\n  height: 55px;\r\n  font-size: ${({ theme }) => theme.fontSize.l};\r\n  background-color: ${({ theme }) => theme.todo};\r\n  border-radius: 50%;\r\n  z-index: 10000;\r\n`;\r\n\r\nclass PageTemplate extends Component {\r\n  state = {\r\n    isNewItemFormVisible: false\r\n  };\r\n\r\n  handleNewItemFormToggle = () => {\r\n    this.setState(prevState => ({\r\n      isNewItemFormVisible: !prevState.isNewItemFormVisible\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { children, cardContext, todo } = this.props;\r\n    const { isNewItemFormVisible } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Sidebar />\r\n\r\n        <StyledPageHeader>\r\n          <StyledHeading big as=\"h1\">\r\n            {cardContext === \"todo\" && `Twoje zadania czekające na realizację`}\r\n            {cardContext === \"done\" && `Zadania zrealizowane`}\r\n          </StyledHeading>\r\n          <StyledParagraph>\r\n            {cardContext === \"todo\" && `liczba zadań: ${todo.length}`}\r\n          </StyledParagraph>\r\n        </StyledPageHeader>\r\n\r\n        <StyledGrid>{children}</StyledGrid>\r\n        {cardContext === \"todo\" && (\r\n          <StyledButtonIcon onClick={this.handleNewItemFormToggle}>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </StyledButtonIcon>\r\n        )}\r\n        <NewItemForm isVisible={isNewItemFormVisible} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nPageTemplate.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n  cardContext: PropTypes.oneOf([\"todo\", \"done\"])\r\n};\r\n\r\nPageTemplate.defaultProps = {\r\n  cardContext: \"todo\"\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.taskReducer.todo\r\n});\r\n\r\nexport default connect(mapStateToProps)(withContext(PageTemplate));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Paragraph from \"../atoms/Paragraph\";\r\nimport Heading from \"../atoms/Heading\";\r\nimport Button from \"../atoms/Button\";\r\nimport {\r\n  removeTask as removeTaskAction,\r\n  changeTaskStatus as changeTaskStatusAction\r\n} from \"../../actions/actions\";\r\nimport withContext from '../../hoc/withContext';\r\n\r\nconst StyledWrapper = styled.div`\r\n  min-height: 300px;\r\n  box-shadow: 0 10px 30px -10px hsla(0, 0%, 0%, 0.2);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  display: grid;\r\n  grid-template-rows: 0.25fr 1fr;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: relative;\r\n  padding: 17px 30px;\r\n\r\n  ${({ colored }) =>\r\n    colored &&\r\n    css`\r\n      background-color: ${({ activeColor, theme }) =>\r\n        activeColor ? theme[activeColor] : theme.todo};\r\n    `}\r\n\r\n  ${({ flex }) =>\r\n    flex &&\r\n    css`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n    `}\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\nconst StyledHeading = styled(Heading)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 5px 0 0;\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  font-size: ${({ theme }) => theme.fontSize.m};\r\n  color: ${({ isImportant }) => (isImportant ? \"red\" : \"black\")};\r\n\r\n  ::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst StyledDateInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst TaskCard = ({\r\n  cardContext,\r\n  title,\r\n  deadline,\r\n  important,\r\n  finishDate,\r\n  id,\r\n  removeTask,\r\n  changeTaskStatus\r\n}) => {\r\n  return (\r\n    <StyledWrapper>\r\n      <InnerWrapper colored activeColor={cardContext}>\r\n        <StyledHeading>\r\n          {cardContext === \"todo\" && `Zadanie do zrobienia`}\r\n          {important && (\r\n            <FontAwesomeIcon\r\n              icon={faExclamationTriangle}\r\n              color=\"red\"\r\n            />\r\n          )}\r\n          {cardContext === \"done\" && `Zadanie wykonane`}\r\n        </StyledHeading>\r\n      </InnerWrapper>\r\n      <InnerWrapper flex>\r\n        <StyledParagraph isImportant={important}>\r\n          {title}\r\n        </StyledParagraph>\r\n        <StyledDateInfo>\r\n          <Paragraph>\r\n            {`termin: ${deadline}`}\r\n          </Paragraph>\r\n          <Paragraph>\r\n            {cardContext === \"done\" && `wykonano: ${finishDate}`}\r\n          </Paragraph>\r\n        </StyledDateInfo>\r\n        <ButtonWrapper>\r\n          <Button secondary onClick={() => removeTask(cardContext, id)}>\r\n            Usuń\r\n          </Button>\r\n          {cardContext === \"todo\" && (\r\n            <Button tertiary onClick={() => changeTaskStatus(cardContext, id)}>\r\n              Zrobione\r\n            </Button>\r\n          )}\r\n        </ButtonWrapper>\r\n      </InnerWrapper>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nTaskCard.propTypes = {\r\n  cardContext: PropTypes.oneOf([\"todo\", \"done\"])\r\n};\r\n\r\nTaskCard.defaultProps = {\r\n  cardContext: \"todo\"\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  removeTask: (itemType, id) => dispatch(removeTaskAction(itemType, id)),\r\n  changeTaskStatus: (itemType, id) =>\r\n    dispatch(changeTaskStatusAction(itemType, id))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(withContext(TaskCard));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PageTemplate from \"../templates/PageTemplate\";\r\nimport TaskCard from \"../components/molecules/TaskCard\";\r\n\r\nconst Todo = ({ todo }) => {\r\n  if (todo.length >= 2) {\r\n    todo.sort((a, b) => {\r\n      if (a.deadline > b.deadline) {\r\n        return 1;\r\n      }\r\n      if (a.deadline < b.deadline) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTemplate cardType=\"todo\">\r\n        {todo.map(item => (\r\n          <TaskCard\r\n            cardType=\"todo\"\r\n            id={item.id}\r\n            key={item.id}\r\n            title={item.title}\r\n            deadline={item.deadline}\r\n            important={item.important}\r\n            finishDate={item.finishDate}\r\n          />\r\n        ))}\r\n      </PageTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todo: state.taskReducer.todo\r\n});\r\n\r\nexport default connect(mapStateToProps)(Todo);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PageTemplate from \"../templates/PageTemplate\";\r\nimport TaskCard from \"../components/molecules/TaskCard\";\r\n\r\nconst Done = ({ done }) => {\r\n  if (done.length >= 2) {\r\n    done.sort((a, b) => {\r\n      if (a.finishDate < b.finishDate) {\r\n        return 1;\r\n      }\r\n      if (a.finishDate > b.finishDate) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageTemplate cardType=\"done\">\r\n        {done.map(item => (\r\n          <TaskCard\r\n            cardType=\"done\"\r\n            id={item.id}\r\n            key={item.id}\r\n            title={item.title}\r\n            deadline={item.deadline}\r\n            finishDate={item.finishDate}\r\n          />\r\n        ))}\r\n      </PageTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  done: state.taskReducer.done\r\n});\r\n\r\nexport default connect(mapStateToProps)(Done);\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,600&display=swap');\r\n/* @import url('https://fonts.googleapis.com/css?family=Montserrat:300,600,900&display=swap'); */\r\n\r\n*, *::before, *::after {\r\n  box-sizing: border-box;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\nhtml {\r\n  font-size: 62.5%; /* happy rems */\r\n}\r\n\r\nbody {\r\n  padding-left: 150px;\r\n  font-size: 1.6rem; /* happy rems */\r\n  font-family: 'Montserrat', sans-serif;\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  todo: \"#F8C61A\",\r\n  done: \"#56CF47\",\r\n  grey100: \"hsl(0, 0%, 96%)\",\r\n  grey200: \"hsl(0, 0%, 90%)\",\r\n  grey300: \"hsl(0, 0%, 50%)\",\r\n  black: \"hsl(0, 0%, 0%)\",\r\n  light: 300,\r\n  bold: 600,\r\n  fontSize: {\r\n    xxs: \"1rem\",\r\n    xs: \"1.2rem\",\r\n    s: \"1.6rem\",\r\n    m: \"2rem\",\r\n    l: \"2.4rem\",\r\n    xl: \"4rem\"\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport GlobalStyle from \"../theme/GlobalStyle\";\r\nimport { theme } from \"../theme/mainTheme\";\r\nimport PageContext from \"../context/index\";\r\n\r\nclass MainTemplate extends Component {\r\n  state = {\r\n    pageType: \"todo\"\r\n  };\r\n\r\n  setCurrentPage = (prevState = \"\") => {\r\n    const pageTypes = [\"todo\", \"done\"];\r\n    const {\r\n      location: { pathname }\r\n    } = this.props;\r\n\r\n    const [currentPage] = pageTypes.filter(page => pathname.includes(page));\r\n\r\n    if (prevState.pageType !== currentPage) {\r\n      this.setState({\r\n        pageType: currentPage\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setCurrentPage();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.setCurrentPage(prevState);\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { pageType } = this.state;\r\n    return (\r\n      <div>\r\n        <PageContext.Provider value={pageType}>\r\n          <GlobalStyle />\r\n          <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n        </PageContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMainTemplate.propTypes = {\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default withRouter(MainTemplate);\r\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { createBrowserHistory } from \"history\";\nimport { Provider } from \"react-redux\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport configureStore from \"../store/configureStore\";\n\nimport Todo from \"./Todo\";\nimport Done from \"./Done\";\nimport MainTemplate from \"../templates/MainTemplate\";\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nconst App = () => {\n  const store = configureStore({ history });\n  return (\n    <div>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <MainTemplate>\n            <Switch>\n              <Route exact path=\"/\" render={() => <Redirect to=\"/todo\" />} />\n              <Route path=\"/todo\" component={Todo} />\n              <Route path=\"/done\" component={Done} />\n            </Switch>\n          </MainTemplate>\n        </ConnectedRouter>\n      </Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"../reducers/reducer\";\r\nimport { initialState } from \"../reducers/taskReducer\";\r\n\r\nexport default function configureStore({ history }) {\r\n  const composeEnhancer = composeWithDevTools({});\r\n  const store = createStore(\r\n    reducer(history),\r\n    initialState,\r\n    composeEnhancer(applyMiddleware(routerMiddleware(history)))\r\n  );\r\n\r\n  return store;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./view/App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}